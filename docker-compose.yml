version: "3.9"

services:
  redis:
    image: redis
    container_name: redis
    command: redis-server /usr/local/etc/redis/redis.conf
    ports:
      - "6379:6379"
    networks:
      - elastic
    volumes:
      - ./redis:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf

  mongodb:
    image: mongo:4.0-xenial
    container_name: mongodb
    command: --replSet rs0
    restart: always
    volumes:
      - ./mongodb:/data/db

    networks:
      - elastic
    ports:
      - 27017:27017

  minio:
    user: "0:0"
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: getAlert
      MINIO_ACCESS_KEY: xxxxxxxxxxxxxxxxxxxxx
      MINIO_SECRET_KEY: xxxxxxxxxxxxxxxxxxxxx
    image: quay.io/minio/minio:latest
    networks:
      - elastic
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - ./s3:/data
    restart: always

  kibana:
    image: docker.elastic.co/kibana/kibana:8.7.1
    container_name: kib
    environment:
      SERVER_NAME: kibana.example.org
      ELASTICSEARCH_HOSTS: http://es:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - elastic

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.7.1
    container_name: es
    environment:
      discovery.type: single-node
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,Z
    ports:
      - "9200:9200"
      - "9300:9300"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --silent --fail localhost:9200/_cluster/health || exit 1",
        ]
      interval: 10s
      timeout: 10s
      retries: 3
    networks:
      - elastic

  monstache:
    image: rwynn/monstache:6.7.2
    container_name: c-monstache
    working_dir: /app
    command: -f ./monstache.config.toml
    volumes:
      - ./monstache/monstache.config.toml:/app/monstache.config.toml
      - ./plugin/plugin.so:/app/plugin.so
    depends_on:
      - mongodb
      - elasticsearch
    ports:
      - "8080:8080"
    networks:
      - elastic

    restart: unless-stopped

networks:
  elastic:
    driver: bridge
